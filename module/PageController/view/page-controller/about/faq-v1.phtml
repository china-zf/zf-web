<?php
$this->render('page-controller/about/sidebar', array('active' => 'faq-v1'));

$headTitle = $this->headTitle();
$headTitle->prepend('About');
$headTitle->prepend('FAQ ZFv1');
?>
<h1>FAQ ZFv1</h1>

<blockquote>
    关于ZF1的常见问题
</blockquote>

<dl>
<dt>Zend_Auth 与 Zend_Acl 的区别是什么?</dt>
<dd>
    <p>
        <tt>Zend_Auth</tt> 是用来验证用户身份的方法, 包括 LDAP, OpenID, 和 HTTP. 身份验证是为系统提供有效的证书. 在您的系统的过程中验证用户的身份.更多信息在Zend框架中验证和实现,
        <a href="http://framework.zend.com/manual/en/zend.auth.html">查看 <tt>Zend_Auth</tt> 文档</a>.
    </p>

    <p>
        <tt>Zend_Acl</tt> 是一个对访问控制列表(ACL)的授权，一般来说, acl列表授权特定资源给角色在您的系统上执行特定的操作. <tt>Zend_Acl</tt>
        可以支持多重继承等高级规则定义与功能角色和断言条件规则. 更多关于 <tt>Zend_Acl</tt>的信息, <a
            href="http://framework.zend.com/manual/en/zend.acl.html">查看 <tt>Zend_Acl</tt> 文档</a>.
    </p>

    <p>
        <tt>Zend_Auth</tt> 和 <tt>Zend_Acl</tt>可以一起使用来构建非常复杂的安全系统: 首先,用户用 <tt>Zend_Auth</tt>确认他们的身份, 然后用这个身份是用来分配一个或多个
        <tt>Zend_Acl</tt> 角色用户授权来使用或修改系统中的资源.
    </p>

<dt>
    我必须为Zend框架做些什么?
</dt>
<dd>
    <p>
        为促进Zend框架的发展，唯一要求是满足是我们的<a href="http://framework.zend.com/cla">个人贡献者许可协议（CLA）</a>，或者我们的<a
            href="http://framework.zend.com/ccla">企业CLA</a>。一旦你已经签署了CLA，您可以访问我们的<a
            href="http://framework.zend.com/wiki/display/ZFDEV/Home" title="Home">贡献者维基</a>上手。
    </p>

    <p>
        我们强烈推荐你阅读和理解我们的新BSD License-style许可证的条款,在Zend框架许可的部分下,包容所有的贡献。
    </p>
</dd>

<dt>我要提交到我的CLA用户是什么，我为什么要提交？</dt>
<dd>
    <p>
        这是你使用的用户名访问<a href="http://framework.zend.com/issues">issue tracker</a>, <a
            href="http://framework.zend.com/wiki">wiki</a>, <a href="http://framework.zend.com/code">code browser</a>等等，
        如果你没有一个用户名，你可以在<a href="http://framework.zend.com/issues/secure/Signup!default.jspa">这里</a>注册，
        当我们处理你的CLA时,我们需要适当的特权授予您的用户。要做到这一点,我们首先得知道您的用户名。

    </p>
</dd>

<dt>
    我应该注册一个<a href="http://framework.zend.com/cla">个人 CLA</a> 还是 <a href="http://framework.zend.com/ccla">企业 CLA</a>?
</dt>

<dd>
    <p>

        如果你贡献的代码作为一个个人，而不是你在公司工作的一部分，你应该在注册<a href="http://framework.zend.com/cla">个人 CLA</a>，反之，你应该在注册一个<a
            href="http://framework.zend.com/ccla">企业 CLA</a>，
        而且你应该提交一份企业CLA与所有同事的姓名,当你觉得能为项目做出了贡献的时候。

    </p>
</dd>

<dt>我应该在了解 Zend Framework CLA 之前提交吗？</dt>
<dd>
<p>通过签署CLA,贡献源代码提供了一个版权，Zend许可证使用他或她提交的源代码Zend框架项目。通过这样做,贡献者不放弃他或她自己的权利或他或她的版权和自己的代码,但是为我们提供了一个版权许可。此外,CLA的目的是明确知识产权的条款，是让Zend框架更好的保护贡献者的知识,而不是为了侵犯了别人的知识产权,让他或她有权做出这样的贡献，。</p>
</dd>

<dt>为什么在Zend Framework项目有CLA呢？</dt>
<dd>
    <p> 我们减轻公司在Zend框架的用户的需求中可能侵犯知识产权的版税或费用，
          无论是个人或公司, 特别是公司把他们重要的业务或产品建立在Zend框架上
        CLA保护所有用户，包括个人、中小企业和大型企业。   Zend框架CLA有助于确保代码和其他IP在Zend框架仍然是免费的。
    </p>

<dt>I am a minor (under 18 years of age). Who should sign my CLA?</dt>
<dd>
    <p>
        　CLA18岁以下的贡献者的应该签署贡献者和贡献者的法定监护人
    </p>
</dd>

<dt>什么样的贡献，要求我提交一份CLA？什么样的贡献可以不提交CLA？
</dt>
<dd>
    <p>
        你必须签署一份CLA在Zend框架可以接受任何构成知识产权的内容。这包括任何可能携带版权或专利。这包括代码,补丁,测试,文档,甚至在<a href="http://framework.zend.com/wiki/display/ZFPROP/Home" title="Home">wiki</a>.提案提交。你不需要在
        在我们的 <a href="http://framework.zend.com/issues">issue tracker</a>,或<a href="http://framework.zend.com/wiki/display/ZFDEV/Mailing+Lists"> mailing lists</a>
        提交一个CAL报告bug。可以包含代码的电子邮件到发送到邮件列表,但是你的代码不能被纳入Zend框架,除非它被提交到基础CAL。
    </p>
</dd>

<dt>
    我已经提交了CLA,现在我如何促进Zend框架?
</dt>
<dd>
    有很多促进Zend框架的方法。主要是通过 <a href="http://framework.zend.com/wiki/display/ZFPROP/Home" title="Home">投票</a>促进ZF的发展。大多数代码贡献者也提交bug修复和测试。另一个有价值的贡献是人工翻译和其他形式的文档。贡献者也可能用他们的时间更新或添加<a href="http://framework.zend.com/wiki">wiki</a>,评论和在我们的<a href="http://framework.zend.com/issues">问题跟踪器</a>投票。无论你如何计划作出贡献,开始贡献最好的地方是我们的向导。
    </p>
</dd>


<dt>Zend框架的ORM实现在哪里?</dt>

<dd>
    <p>
        Object Relational Maps (ORMs) are practically frameworks on their own, and consist of data access, repositories,
        identity maps, and many more components. We feel it makes sense to let ORM experts write such software, and
        allow integrating these solutions in Zend Framework. Popular projects include Doctrine and Propel.
    </p>
</dd>

<dt>I want to use a SQL function or perform calculations in a statement I'm generating with Zend_Db_Select. How can I do
    this?
</dt>

<dd>
    <p>
        Actually, by default, if your expression includes parentheses, <tt>Zend_Db_Select</tt> will cast the statement
        appopriately. However, if it does not, or you are having problems, you can use <tt>Zend_Db_Expr</tt> to
        explicitly create the expression:
    </p>

        <pre class="highlight"><code>/* Build the SQL:
                * SELECT p."product_id", p.cost * 1.08 AS cost_plus_tax
                * FROM "products" AS p
                */
                $select = $db-&gt;select()
                -&gt;from(array('p' =&gt; 'products'),
                array(
                'product_id',
                'cost_plus_tax' =&gt; new Zend_Db_Expr('p.cost * 1.08'),
                ));
            </code></pre>

<dt>How can I customize the appearance of forms generated by <tt>Zend_Form</tt>?</dt>

<dd>
    <p>
        You're probably looking for <a
            href="http://devzone.zend.com/article/3450-Decorators-with-Zend_Form">decorators</a>. All forms and form
        elements in Zend_Form use decorators to render their output.
    </p>
</dd>

<dt>How can I add extra HTML (such as a link) to my form element?</dt>
<dd>

    <p>
        This can easily be done using decorators. For instance using the Description decorator. It is important to note
        though that you will need to turn off escaping for the output of the decorator:</p>

            <pre class="highlight"><code>$element-&gt;setDecorators(array(
                    array('ViewHelper'),
                    array('Description', array('escape' =&gt; false)),
                    array('Errors'),
                    array('HtmlTag', array('tag' =&gt; 'dd')),
                    array('Label', array('tag' =&gt; 'dt')),
                    ));</code></pre>

    <p>Now, you can use the following to add extra HTML to the element:</p>

            <pre class="highlight"><code>$element-&gt;setDescription(
                    '&lt;strong&gt;This contains HTML that will actually be parsed by the browser, not escaped&lt;/strong&gt;'
                    );</code></pre>

</dd>

<dt>Why can't <tt>Zend_Form</tt> render my <tt>File</tt> element without errors?</dt>

<dd>
    <p>
        The file element needs a special file decorator, which is added by default. When you set your own decorators for
        file elements, you delete the default decorators. For example:</p>

            <pre class="highlight"><code>$element-&gt;setDecorators(array(
                    array('ViewHelper'),
                    array('Errors')
                    ));</code></pre>

    <p>
        You should use a <tt>File</tt> decorator instead of the <tt>ViewHelper</tt> for the file element, like so:
    </p>

            <pre class="highlight"><code>$element-&gt;setDecorators(array(
                    array('File'),
                    array('Errors')
                    ));</code></pre>

</dd>

<dt>How can I detect if an optional file has been uploaded?</dt>
<dd>

    <p>The <tt>receive()</tt> method will return <tt>true</tt> for file elements that are not required. The reason is
        that you said "the file can be omitted, and that's ok for me". The <tt>receive()</tt> method will return false
        only in the event of a failure.</p>

    <p>Still there are several ways to detect if a file has been uploaded or not:</p>

    <ul>
        <li>Use isUploaded which returns a boolean</li>
        <li>Use getFileName which returns null in this case (note that you must use the latest release for this
            behaviour)
        </li>
        <li>Use getFileInfo which will have an empty 'file' key and the flag 'isUploaded' set to false
        </li>
    </ul>

</dd>

<dt>Which version of PHP does Zend Framework require?</dt>

<dd>

    <p>Zend Framework requires PHP 5.2.11 and up. Some Zend Framework components may work with earlier versions of PHP,
        but these components are tested and supported only on 5.2.11 and up. See the <a
            href="http://framework.zend.com/manual/en/requirements.html">requirements appendix</a> for more information.
    </p>

</dd>

<dt>Does Zend Framework support PHP 4?</dt>

<dd>
    <p>No. Zend Framework was built to use all of the sophisticated object oriented features of PHP 5 and take advantage
        of significant performance and security enhancements.</p>

    <p>Another consideration was support of the platform ZF would be running on. The PHP community officially
        discontinued support for PHP 4 as of 2008-01-01, and no critical security updates will be published for PHP 4
        after 2008-08-08.</p>

    <p>These factors, among others, convinced us that PHP 5 was the best platform for Zend Framework and applications
        built on ZF.</p>
</dd>


<dt>>Where is the model in ZF's MVC implementation?</dt>

<dd>
    <p>The model component can vary dramatically in responsibilities and data store from one MVC application to the
        next. The ZF community has not defined a model interface, class, or other formalism simply because we wanted to
        avoid introducing limitations without significant added value.</p>

</dd>

<dt>Is ZF a component library or a framework?</dt>

<dd>

    <p>Simple answer: both. Zend Framework provides all the components required for most web applications in a single
        distribution. But Zend Framework components are also loosely coupled, making it easy to use just a few
        components in a web application- even alongside other frameworks! Using this use-at-will architecture, we are
        implementing features commonly found in more monolithic frameworks. In fact, we are currently working on a
        tooling component for the 1.8 release that will make it simpler to build applications using ZF components, yet
        will not sacrifice the use-at-will nature of existing ZF components. It's a testament to the use-at-will
        architecture of Zend Framework that the tooling component itself can be used standalone.</p>

</dd>

<dt>How can I make all i18n-aware components aware of my Zend_Translate object?</dt>

<dd>
    <p>A variety of components are translation aware (i.e., accept <tt>Zend_Translate</tt> objects), including:</p>

    <ul>
        <li>Zend_View_Helper_Translate</li>
        <li>Zend_Validate_*</li>
        <li>Zend_Form</li>
    </ul>

    <p>To have them all use the same <tt>Zend_Translate</tt> instance, simply place it in the registry with the key
        "Zend_Translate":</p>


    <pre class="highlight"><code>Zend_Registry::set('Zend_Translate', $translate);</code></pre>

</dd>

<dt>How can I use the same locale everywhere?</dt>

<dd>

    <p>With ZF 1.7 an application wide locale is supported. You can do the following in your bootstrap file:</p>

            <pre class="highlight"><code>$locale = new Zend_Locale('en');
                    Zend_Registry::set('Zend_Locale', $locale);</code></pre>


    <p>From now on, all locale aware components will use your locale object stored in the registry as long as you don't
        give another one manually.</p>

</dd>

<dt>Why are my dates formatted wrong? Why do I get the false year value?</dt>

<dd>

    <p>When using own formats in your code you could come to a situation where you get for example 29.12.2009, but you
        expected to get 29.12.2008.</p>

    <p>There is one year difference: 2009 instead of 2008. You should use the lower cased year constant. See this
        example:</p>

    <pre class="highlight"><code>$date-&gt;toString('dd.MM.yyyy');</code></pre>

    <p>Note the lower cased "y" which makes the difference and outputs the real year.</p>

</dd>

<dt>How can I debug Zend_Date in a simple way?</dt>
<dd>
    <p>
        When you think that you are getting wrong output from Zend_Date then it's often needed to see what Zend_Date
        really uses internally.
    </p>

    <p>
        Well.. a var_dump of Zend_Date is not really helpfull, but you could simply use getIso(). This format has all
        date informations available:
    </p>

    <pre class="highlight"><code>$date-&gt;getIso(); // could return '2009-10-21T15:00:02+01:00'</code></pre>

    <p>
        Note that using toString() and outputting only parts of a date does not show all needed informations. There
        could be a wrong used timezone, or a DST change which is suppressed by toString() but shown with getIso().
    </p>


<dt>Where's the model?</dt>

<dd>
    <p>Unlike the view and the controller components, the model component can vary dramatically in responsibilities and
        data storage from one MVC application to the next. It should represent what your application does in the
        abstract. The Zend Framework community has not defined a model interface, class, or other formalism because we
        haven't identified enough added value to justify limitations on what constitutes a model.</p>

</dd>

<dt>How can I retrieve the view object within a plugin or arbitrary code?</dt>

<dd>
    <p>
        ZF uses an action helper called the ViewRenderer by default. This action helper instantiates and stores a
        Zend_View object, which is subsequently injected into other objects. The view object is stored in the
        ViewRenderer's view property. You can get the ViewRenderer instance, and thereby the view instance, with the
        Action Helper broker:
    </p>

            <pre class="highlight"><code>$viewRenderer =
                    Zend_Controller_Action_HelperBroker::getStaticHelper('viewRenderer';
                    $view = $viewRenderer-&gt;view;
                </code></pre>


    <p>However, if you're accessing the view early in the dispatch process- before an action is actually dispatched, for
        example- then you may need to initialize the view first:</p>

    <div class="code">
                <pre class="highlight"><code>if (!isset($viewRenderer-&gt;view)) {
                        $viewRenderer-&gt;initView();
                        }
                        $view = $viewRenderer-&gt;view;
                    </code></pre>

        <p>
            If you are using and have already initialized Zend_Layout, you can access the view object much more
            succinctly:
        </p>

        <pre class="highlight"><code>$view = Zend_Layout::getMvcInstance()-&gt;getView();</code></pre>

        <p>This proxies to the ViewRenderer and performs all of the steps above for you.</p>

</dd>

<dt>I'm using the ContextSwitch or AjaxContext view helper and receiving an exception indicating the error.ajax.phtml
    view script is missing; what am I doing wrong?"
</dt>

<dd>
    <p>
        ContextSwitch makes the assumptions that (a) you are not calling <tt>_forward()</tt> and (b) that your
        application code will not throw an exception. If you see the above error, your code is throwing an exception -
        but the context is still in play, and the ViewRenderer is simply trying to load a view script for the current
        context from the ErrorController.
    </p>

    <p>
        The easiest way to fix the situation is to have the <tt>ErrorController::errorAction()</tt> redefine the view
        script suffix, as follows:
    </p>

<pre class="highlight"><code>class ErrorController extends Zend_Controller_Action
        {
        public function errorAction()
        {
        $this-&gt;_helper-&gt;viewRenderer-&gt;setViewSuffix('phtml');
        // ...
        }
        }
    </code></pre>

</dd>

<dt>I'm using Apache, and passing urlencoded slashes via $_GET or as URL parameters – and I'm getting 404s!</dt>

<dd>

    <p>
        Apache by default disallows urlencoded slashes (i.e., "%2F") in URL path parts or the query string. This feature
        can be disabled by enabling the "AllowEncodedSlashes" directive:
    </p>

    <pre class="highlight"><code>AllowEncodedSlashes On</code></pre>

    <p>However, this directive must be set at either a server-wide (httpd.conf) or virtual-host level.</p>

    <p>For more information, <a href="http://httpd.apache.org/docs/2.0/mod/core.html#allowencodedslashes">read the
            AllowEncodedSlashes documentation</a>.</p>

</dd>

<dt>What is Lucene?</dt>
<dd>
    <p>
        <a href="http://lucene.apache.org/java/docs/index.html">Lucene</a> is a high-performance, full-featured text
        search engine that utilizes an open, binary format for storing search indexes and a standardized query format
        for querying against the indexes. Lucene was originally written in Java as part of the Apache project. <tt>Zend_Search_Lucene</tt>
        is a PHP implementation that provides full binary compatibility with Java Lucene.
    </p>
</dd>

<dt>Can I use <tt>Zend_Search_Lucene</tt> to search my Java Lucene-generated indexes?</dt>
<dd>
    <p>
        Yes! In fact, the Zend Framework site uses <tt>Zend_Search_Lucene</tt> with indexes created by our Java
        developer tools to provide site-wide search.
    </p>
</dd>

<dt>Can I use tools such as <a href="http://www.getopt.org/luke/">Luke</a> with indexes generated by <tt>Zend_Search_Lucene</tt>?
</dt>
<dd>
    <p>Yes! We regularly use Luke to inspect our <tt>Zend_Search_Lucene</tt>-generated indexes for development and
        diagnosis purposes.</p>
</dd>


<dt>Why are client libraries for web services such as Akismet, Amazon, Audioscrobbler, Delicious, Flickr, Nirvanix,
    Simpy, StrikeIron, and Yahoo! part of the Zend Framework standard library?
</dt>

<dd>
    <p>
        Zend Framework has been designed to solve the most common problems in web application development. Web services
        are a big part of today's web development environment. So much so that many of our users consume our web service
        clients for services such as Amazon ECS, Akismet, and ReCaptcha before adopting more infrastructure-oriented
        components such as Zend_Registry and Zend_Log. Because these web services play such an important role in today's
        web applications, we consider them 'first-class citizens' in ZF.
    </p>
</dd>

<dt>I've tried sending an 'unsubscribe' mail to all ZF mailing lists, but I'm still getting messages from these lists.
    What do I have to do to stop getting these mails?
</dt>
<dd>
    <p>There is an 'fw-all' list that aggregates all other lists besides fw-announce, fw-general, fw-docs, and fw-svn.
        Please try sending an email to <a
            href="mailto:fw-all-subscribe@lists.zend.com">fw-all-subscribe@lists.zend.com</a> to make sure you're not
        subscribed to this list.
        Also, please ensure that you mail all unsubscribe requests from the account that you subscribed with. You may be
        receiving list traffic on a different account if you have set up a mail forward from the original subscription
        account.</p>

<dt>Where can I reset my password?</dt>

<dd>
    <p>
        <a href="http://framework.zend.com/crowd">http://framework.zend.com/crowd</a></p>
</dd>

<dt>What services are available from Zend Technologies for Zend Framework?</dt>
<dd>
    <p>
        <a href="http://www.zend.com">Zend Technologies</a> provides a comprehensive set of services for Zend Framework,
        including:
    </p>

    <ul>
        <li><a href="http://www.zend.com/en/services/support/zend-framework-support">Support</a></li>
        <li><a href="http://www.zend.com/en/services/training/course-catalog/zend-framework">Training</a></li>
        <li><a href="http://www.zend.com/en/services/consulting">Consulting</a></li>
        <li><a href="http://www.zend.com/en/services/certification/framework/">Certification</a></li>
    </ul>

</dd>
</dl>